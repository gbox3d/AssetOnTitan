/**
 * Created by gbox3d on 2014. 2. 9..
 */
var fs = require('fs');

function update_checklist(option) {

    //console.log('update configer v0.8.3');

    var src_dir = option.src_dir || '';
    var mode_option = option.mode;

    var walk = function(dir, done) {
        var results = [];
        fs.readdir(dir, function(err, list) {
            if (err) return done(err);
            var pending = list.length;
            if (!pending) return done(null, results);
            list.forEach(function(file) {
                file = dir + '/' + file;
                //file += file;
                fs.stat(file, function(err, stat) {
                    if (stat && stat.isDirectory()) {
                        walk(file, function(err, res) {
                            results = results.concat(res);
                            if (!--pending) done(null, results);
                        });
                    } else {

                        results.push(
                            {
                                fn:file,
                                time:(new Date(stat.atime)).getTime() //파일생성시간(갱신) 얻기
                            }
                        );

                        if (!--pending) done(null, results);
                    }
                });
            });
        });
    };




//    if(src_dir == undefined) {
//        src_dir = '';
//    }






    walk("./" + src_dir, function(err, results) {
        if (err) throw err;

        //console.log( results );

        var checklist = {};

        checklist.version = 1;
        checklist.files = {};



        var checkFile = src_dir+"/check.json";

        if(mode_option == 'reset')
        {

            //checkFile = src_dir+"/" + target_file;

        }
        else {

            var oldlist = fs.readFileSync(checkFile,'utf-8');
            checklist.version =  JSON.parse(oldlist).version + 1;

        }

        for(var i in results) {

            if(results[i].fn.indexOf('.svn') < 0 ) {

                var key = results[i].fn.slice(2, results[i].fn.length );

                key = key.slice(key.indexOf('/')+1,key.length);

                //check.json 은 빼고한다.
                if(key != 'check.json')
                {
                    checklist.files[key] = results[i].time;

                }
            }
        }

        fs.writeFile("./" + src_dir + "/check.json", JSON.stringify(checklist), function(err) {
            if(err) {
                console.log(err);
                option.complete({
                    result : 'error'
                });
            } else {
                console.log("The file was saved!....chk rev version " + checklist.version);

                option.complete({
                    msg : "The file was saved!....chk rev version " + checklist.version,
                    result : 'ok'
                });
            }
        });

    });

}

module.exports.update_checklist = update_checklist;